{"version":3,"sources":["logo.svg","Components/NavigationBar.js","Services/MovieService.js","Components/SignUpIn.js","Components/MovieAddEditComponent.js","Components/MovieComponent.js","App.js","reportWebVitals.js","index.js"],"names":["NavigationBar","props","state","isOpen","toggle","bind","this","setState","userInfoDetails","JSON","parse","window","sessionStorage","getItem","console","log","userInfo","Navbar","color","dark","expand","NavbarBrand","tag","Link","to","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","NavLink","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","divider","NavbarText","name","Button","floated","removeItem","Component","MOVIES_API_URL","MovieDataService","axios","get","movie","post","id","delete","put","user","emailId","pwd","SignUpIn","handleChange","e","value","handleSubmit","submittedUser","email","password","movieService","retrieveUserByEmail","then","response","data","findUserResponse","isAdmin","admin","userAccount","setItem","stringify","history","push","findApiError","findApiErrorMessage","catch","err","apiError","apiErrorMessage","Promise","reject","signupContainerDivStyle","margin","signupFormDivStyle","style","Alert","Header","size","page","Form","onSubmit","Group","widths","Input","label","placeholder","onChange","required","type","for","content","primary","secondary","href","withRouter","MovieAddEditComponent","handleOnBlurForGenre","genreList","target","indexOf","split","map","genreItem","trim","length","genre","addEditResponseData","submittedMovie","moviename","director","imdb_score","popularity","toFixed","isEditPage","updateMovie","movie_id","isSuccess","isEditResponse","editedMovie","responseData","responseCallback","addMovie","addedMovieName","addedMovie","imdbscore","movieToEdit","undefined","item","disabled","min","max","getCommaSeperatedGenreList","onBlur","backToMoviesCallback","MovieComponent","retrieveAllMoviesData","retrieveAllMovies","allMoviesResponse","allMovies","sortAsPerImdbrating","topGenres","fetchAvailableGenres","filter","index","self","allMoviesData","sort","a","b","showAddMoviePage","showUpdateMoviePage","showAllMoviesPage","showGenreSearchButtons","isMobileScreen","genreColorList","i","searchValue","innerText","searchCriteria","genreArr","handleAddEditCallback","isAddResponse","isSuccessfulResponse","successResponseMessage","backToMoviesPage","isLoading","gridSize","selectedMovie","addEventListener","resize","setTimeout","innerWidth","removeEventListener","deleteMovie","deletedMovie","isDeleteSuccess","scrollTo","isGenrePresent","toLowerCase","searchByGenre","fmovie","whiteSpace","ButtonGroup","editMovie","event","align","Spinner","width","height","Container","fluid","isFailureResponse","failureResponseMessage","Table","Icon","icon","inverted","circular","link","searchMoviesByNameAndDirector","showMoviesGrid","App","path","exact","render","isAuthed","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.033e3ecf.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.2d27ead7.svg\";","import React, { Component } from 'react';\r\nimport { Collapse, Nav, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink,\r\n   NavbarText,DropdownToggle, DropdownItem,UncontrolledDropdown, DropdownMenu } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Card, Grid, Image, Icon, Header } from 'semantic-ui-react';\r\n\r\nexport default class NavigationBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isOpen: false,\r\n    };\r\n    this.toggle = this.toggle.bind(this);\r\n  }\r\n\r\n  toggle() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    // retrieve user acount from session \r\n    let userInfoDetails = JSON.parse(window.sessionStorage.getItem('userAccount'));\r\n    console.log(\"user infor from session --\", userInfoDetails);\r\n    this.setState({\r\n      userInfo: userInfoDetails,\r\n    });\r\n  }\r\n  render() {\r\n    return <div>\r\n              <Navbar color=\"dark\" dark expand=\"md\">\r\n                <NavbarBrand color=\"red\" tag={Link} to=\"#\">Muvies App</NavbarBrand>\r\n\r\n                <NavbarToggler onClick={this.toggle} />\r\n                <Collapse isOpen={this.state.isOpen} navbar>\r\n                  <Nav className=\"mr-auto\" navbar>\r\n                 \r\n                    <NavItem>\r\n                      <NavLink tag={Link} to={this.state.userInfo ? \"#\" : \"/\"}>Home</NavLink>\r\n                    </NavItem>\r\n                  \r\n                    <NavItem>\r\n                      <NavLink  tag={Link} to=\"/movies\">Muvies</NavLink>\r\n                    </NavItem>\r\n                    <UncontrolledDropdown nav inNavbar>\r\n                      <DropdownToggle nav caret>\r\n                        Options\r\n                      </DropdownToggle>\r\n                      <DropdownMenu right>\r\n                        <DropdownItem>\r\n                          Option 1\r\n                        </DropdownItem>\r\n                        <DropdownItem>\r\n                          Option 2\r\n                        </DropdownItem>\r\n                        <DropdownItem divider />\r\n                        <DropdownItem>\r\n                          Reset\r\n                        </DropdownItem>\r\n                      </DropdownMenu>\r\n                    </UncontrolledDropdown>\r\n                  </Nav>\r\n                  {/* <NavbarText>Simple Text</NavbarText> */}\r\n\r\n                  {/* Sign in Buttons */}\r\n                  {/* <Button.Group floated='right'> */}\r\n                  {this.state.userInfo &&\r\n                      <div>\r\n                      <NavbarText color=\"red\">Welcome {this.state.userInfo.name}</NavbarText>\r\n                      <Button color='blue' floated='right'>\r\n                        <NavbarBrand tag={Link} to=\"/\" onClick={() => {\r\n                          window.sessionStorage.removeItem('userAccount');\r\n                        }}>Sign Out</NavbarBrand>\r\n                      </Button>\r\n                      </div>\r\n                  }\r\n\r\n                  {!this.state.userInfo &&\r\n                    \r\n                      <Button color='blue' floated='right'>\r\n                        <NavbarBrand tag={Link} to=\"/\">Sign In</NavbarBrand>\r\n                      </Button> \r\n                  }\r\n                {/* </Button.Group> */}\r\n                </Collapse>\r\n              </Navbar>\r\n        \r\n      \r\n      {/* <NavbarBrand tag={Link} to=\"/\">Home</NavbarBrand>\r\n        <NavbarToggler onClick={this.toggle}/>\r\n        <NavbarBrand tag={Link} to=\"/movies\">Movies</NavbarBrand>\r\n        <NavbarBrand tag={Link} to=\"#\">More</NavbarBrand> */}\r\n      </div>\r\n  }\r\n}","import axios from 'axios'\r\n\r\nconst MOVIES_API = 'movies'\r\nconst MOVIES_HOST = 'http://localhost:8080'\r\nconst MOVIES_API_URL = `${MOVIES_HOST}/${MOVIES_API}`\r\n\r\nexport default class MovieDataService {\r\n\r\n    retrieveAllMovies(name) {\r\n        \r\n        return axios.get(`${MOVIES_API_URL}/allMovies`);\r\n    }\r\n\r\n    addMovie(name, movie) {\r\n        \r\n        return axios.post(`${MOVIES_API_URL}/addMovie`, movie);\r\n    }\r\n\r\n    retrieveMovie(name, id) {\r\n        \r\n        return axios.get(`${MOVIES_API_URL}/find/${id}`);\r\n    }\r\n\r\n    deleteMovie(name, id) {\r\n        \r\n        return axios.delete(`${MOVIES_API_URL}/delete/${id}`);\r\n    }\r\n\r\n    updateMovie(name, id, movie) {\r\n        \r\n        return axios.put(`${MOVIES_API_URL}/update/${id}`, movie);\r\n    }\r\n\r\n    \r\n\r\n    saveAndSignUpUser(user) {\r\n        \r\n        return axios.post(`${MOVIES_API_URL}/addUser`, user);\r\n    }\r\n\r\n    retrieveUserById(user, id) {\r\n        \r\n        return axios.get(`${MOVIES_API_URL}/user/find/${id}`);\r\n    }\r\n\r\n    retrieveUserByEmail(emailId,pwd) {\r\n        \r\n        return axios.get(`${MOVIES_API_URL}/user/find/${emailId}/${pwd}`);\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport NavigationBar from './NavigationBar';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Form,Header,Button } from 'semantic-ui-react'\r\nimport MovieDataService from '../Services/MovieService';\r\nimport { Alert } from 'reactstrap';\r\n\r\n\r\nclass SignUpIn extends Component {\r\n\r\n    movieService;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            signupContainerDivStyle: {\r\n                margin: '20px',\r\n            },\r\n            signupFormDivStyle: {\r\n                margin: '20px',\r\n            },\r\n            submittedUser:{ \r\n                    name: '', \r\n                    email: '', \r\n                    password: '' \r\n            },\r\n            name: '', \r\n            email: '', \r\n            password: '',\r\n        }\r\n        this.movieService = new MovieDataService();\r\n    }\r\n\r\n  componentDidMount() {\r\n\r\n     // retrieve user acount from session \r\n     let userInfoDetails = JSON.parse(window.sessionStorage.getItem('userAccount'));\r\n     console.log(\"user infor from session --\", userInfoDetails);\r\n     this.setState({\r\n       userInfo: userInfoDetails,\r\n     });\r\n  }  \r\n\r\n  handleChange = (e, { name, value }) => this.setState({ [name]: value })\r\n\r\n  handleSubmit = () => {\r\n    \r\n   \r\n    let submittedUser = {\r\n        name: this.state.name, \r\n        email: this.state.email,\r\n        password: this.state.password,\r\n    };\r\n    console.log('Submitted uder for sign in ---', submittedUser);\r\n    this.movieService.retrieveUserByEmail(submittedUser.email,submittedUser.password).then(\r\n        response => {\r\n            console.log('response for search user id ---', response.data);\r\n            if(response.data[0]) {\r\n                // user present in db\r\n                this.setState({\r\n                    findUserResponse: response.data[0],\r\n                    isAdmin: response.data[0] && response.data[0].admin === true ? true : false,\r\n                });\r\n\r\n\r\n                // is sign is successfull ---> encrypt password and store in session\r\n                let userAccount = response.data[0];\r\n                window.sessionStorage.setItem('userAccount',JSON.stringify(userAccount));\r\n\r\n                // navigate mo movies page\r\n                this.props.history.push('/movies');\r\n            } else {\r\n                // user not present in Db\r\n                this.setState({\r\n                    findUserResponse: response.data,\r\n                    findApiError: true,\r\n                    findApiErrorMessage: 'Could not find your details, please SIGN UP',\r\n                });\r\n            }\r\n            \r\n        }\r\n    ).catch((err) => {\r\n        \r\n        this.setState({ \r\n            \r\n            apiError: true,\r\n            apiErrorMessage: 'Sorry , error in backend api . Please try again',\r\n            \r\n        });\r\n        return Promise.reject(err);\r\n    });\r\n       \r\n    // this.movieService.saveAndSignUpUser(this.state.submittedUser);\r\n   \r\n  }\r\n\r\n  render() {\r\n    \r\n\r\n    return (\r\n      <div>\r\n        <NavigationBar></NavigationBar>\r\n\r\n        <div style={{margin: '40px'}}>\r\n        {/* No user found */}\r\n        {this.state.findApiError && this.state.findApiErrorMessage &&\r\n              <Alert color=\"danger\">\r\n                {this.state.findApiErrorMessage}\r\n              </Alert>\r\n        }\r\n\r\n        {/* common api error */}\r\n        {this.state.apiError && this.state.apiErrorMessage &&\r\n              <Alert color=\"danger\">\r\n                {this.state.apiErrorMessage}\r\n              </Alert>\r\n        }\r\n        <Header size='large'>{this.props.page === 'add' ? 'Sign In' : 'Sign IN'}</Header>\r\n        <Form onSubmit={this.handleSubmit}>\r\n\r\n            <Form.Group widths={2}>\r\n                <Form.Input\r\n                    label='Enter Email'\r\n                    placeholder='Email'\r\n                    name='email'\r\n                    value={this.state.email}\r\n                    onChange={this.handleChange}\r\n                    required\r\n                    type='email'\r\n                    for='email'\r\n            \r\n                />\r\n                {/* <Form.Input\r\n                    label='Enter Name' \r\n                    placeholder='Name'\r\n                    name='name'\r\n                    value={this.state.name}\r\n                    onChange={this.handleChange}\r\n                    required\r\n                    \r\n                /> */}\r\n\r\n                \r\n            </Form.Group>\r\n            \r\n            <Form.Group widths={2}>\r\n                \r\n                <Form.Input\r\n                    label='Enter Password'\r\n                    placeholder='password'\r\n                    name='password'\r\n                    value={this.state.password}\r\n                    onChange={this.handleChange}\r\n                    type='password'\r\n                    required\r\n                />\r\n            \r\n\r\n            </Form.Group>\r\n            <Form.Button content='Submit' primary/>\r\n            {/* <Button type='submit'>Submit</Button> */}\r\n            <Button floated='right' content='Explore Movies Page >'\r\n                    secondary primary href=\"/movies\" />\r\n        </Form>\r\n        </div>\r\n    \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(SignUpIn);","import React, { Component } from 'react';\r\nimport NavigationBar from './NavigationBar';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Form,Header,Button } from 'semantic-ui-react'\r\nimport MovieDataService from '../Services/MovieService';\r\nimport { Alert } from 'reactstrap';\r\n\r\nclass MovieAddEditComponent extends Component {\r\n\r\n    movieService;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            signupContainerDivStyle: {\r\n                margin: '20px',\r\n            },\r\n            signupFormDivStyle: {\r\n                margin: '20px',\r\n            },\r\n            submittedMovie:{ \r\n                moviename: '',\r\n                director: '',\r\n                imdbscore: '',\r\n                genre: [],\r\n                popularity: '',\r\n            },\r\n            moviename: this.props.movieToEdit && this.props.movieToEdit.name ? this.props.movieToEdit.name :'',\r\n            director: this.props.movieToEdit && this.props.movieToEdit.director ? this.props.movieToEdit.director : '',\r\n            popularity: this.props.movieToEdit && this.props.movieToEdit.popularity ? this.props.movieToEdit.popularity : '',\r\n            genre: this.props.movieToEdit && this.props.movieToEdit.genre ? this.props.movieToEdit.genre : [],\r\n            genreItem: undefined,\r\n        }\r\n        console.log('Movie received for editing -',  this.props.movieToEdit);\r\n        this.movieService = new MovieDataService();\r\n    }\r\n\r\n    \r\n    handleOnBlurForGenre = (e) => {\r\n        let genreList = [];\r\n        let value = e.target && e.target.value;\r\n        console.log('genre - ',value);\r\n        if(value !== '' && value.indexOf(',') > -1) {\r\n            \r\n            value.split(',').map((genreItem) => {\r\n                genreItem = genreItem.trim();\r\n                if(genreItem.trim().length > 0) {\r\n                    genreList.push({name:genreItem})\r\n                }\r\n            });\r\n            console.log('received list and created list ====>',genreList);\r\n\r\n            this.setState({ \r\n                genre: [...genreList],\r\n            });\r\n        } else if(value !== '') {\r\n            this.setState({ \r\n                genre: [{name:value}],\r\n            });\r\n        }  \r\n        \r\n    }\r\n  handleChange = (e, { name, value }) => {\r\n    \r\n    this.setState({ [name]: value });\r\n  }\r\n  \r\n\r\n  handleSubmit = () => {\r\n    // clearing other common errors if any before submit again\r\n    this.setState({\r\n        apiError: false,\r\n    });\r\n    let addEditResponseData = {};\r\n    let submittedMovie = {\r\n        name: this.state.moviename, \r\n        director: this.state.director,\r\n        imdb_score: (this.state.popularity / 10).toFixed(1),\r\n        genre: this.state.genre,\r\n        popularity: this.state.popularity,\r\n    };\r\n\r\n    // edit api\r\n    if(this.props.isEditPage) {\r\n        this.movieService.updateMovie(submittedMovie.name, submittedMovie.movie_id,submittedMovie).then(\r\n            response => {\r\n                console.log('update movie api response -', response.data);\r\n                \r\n                addEditResponseData = {\r\n                    addEditResponseData: response.data,\r\n                    isSuccess: true,\r\n                    isEditResponse: true,\r\n                }\r\n\r\n                this.setState({\r\n                    editedMovie: response.data,\r\n                    responseData: addEditResponseData,\r\n                });\r\n                this.props.responseCallback(addEditResponseData);\r\n            }\r\n        ).catch((err) => {\r\n            addEditResponseData = {\r\n                isSuccess: false,\r\n                isEditResponse: true,\r\n            }\r\n          \r\n            this.setState({ \r\n                responseData: addEditResponseData,\r\n                apiError: true,\r\n                apiErrorMessage: 'Sorry , error in backend api . Please try again',\r\n            });\r\n            return Promise.reject(err);\r\n        });\r\n    } \r\n\r\n\r\n    // add api\r\n    if(!this.props.isEditPage) {\r\n        this.movieService.addMovie(submittedMovie.name,submittedMovie).then(\r\n            response => {\r\n                console.log('add movie api response -', response.data);\r\n                addEditResponseData = {\r\n                    addEditResponseData: response.data,\r\n                    isSuccess: true,\r\n                    isEditResponse: false,\r\n                    addedMovieName: submittedMovie.name,\r\n                }\r\n\r\n                this.setState({ \r\n                    addedMovie: response.data,\r\n                    responseData: addEditResponseData,\r\n                });\r\n                this.props.responseCallback(addEditResponseData);\r\n            }\r\n            \r\n        ).catch((err) => {\r\n            addEditResponseData = {\r\n                isSuccess: false,\r\n                isEditResponse: false,\r\n                apiError: true,\r\n                apiErrorMessage: 'Sorry , error in backend api . Please try again',\r\n            }\r\n            this.setState({ \r\n                apiError: true,\r\n                responseData: addEditResponseData,\r\n            });\r\n            return Promise.reject(err);\r\n        });\r\n    }\r\n   \r\n  }\r\n  getCommaSeperatedGenreList() {\r\n    \r\n        if(this.props.isEditPage && !this.state.genreItem) {\r\n            return this.props.movieToEdit.genre.map((item) => {\r\n                return item.name;\r\n            });\r\n        } else {\r\n            return this.state.genreItem;\r\n        }\r\n  }\r\n  render() {\r\n    \r\n\r\n    return (\r\n      <div>\r\n\r\n        <div style={{margin: '40px'}}>\r\n\r\n        {/* common api error */}\r\n        {this.state.apiError && this.state.apiErrorMessage &&\r\n              <Alert color=\"danger\">\r\n                {this.state.findApiErrorMessage}\r\n              </Alert>\r\n        }\r\n\r\n        <Header size='large'>{this.props.page === 'add' ? 'Movie Add' : 'Movie Update'}</Header>\r\n        <Form onSubmit={this.handleSubmit}>\r\n\r\n            <Form.Group widths={2}>\r\n                <Form.Input\r\n                    label='Movie Name'\r\n                    placeholder='movie name'\r\n                    name='moviename'\r\n                    value={this.state.moviename}\r\n                    onChange={this.handleChange}\r\n                    required\r\n                    disabled={this.props.isEditPage}\r\n                />\r\n                <Form.Input\r\n                    label='Director Name' \r\n                    placeholder='directors name'\r\n                    name='director'\r\n                    value={this.state.director}\r\n                    onChange={this.handleChange}\r\n                    required\r\n                    \r\n                />\r\n\r\n                \r\n            </Form.Group>\r\n            \r\n            <Form.Group widths={2}>\r\n                \r\n                <Form.Input\r\n                    label='Popularity %'\r\n                    placeholder='ranges from 1 to 100'\r\n                    name='popularity'\r\n                    value={this.state.popularity}\r\n                    onChange={this.handleChange}\r\n                    type='number'\r\n                    min={1}\r\n                    max={100}\r\n                    required\r\n                />\r\n                <Form.Input\r\n                    label='Enter Genre  - [comma sepereted for multiple Genre]'\r\n                    placeholder='comma seperated genre'\r\n                    name='genreItem'\r\n                    value={this.getCommaSeperatedGenreList()}\r\n                    onBlur={this.handleOnBlurForGenre}\r\n                    onChange={this.handleChange}\r\n                    required\r\n                    type='text'\r\n                />\r\n\r\n            </Form.Group>\r\n            <Form.Button content='Submit' primary/>\r\n            \r\n            {/* <Button type='submit'>Submit</Button> */}\r\n        </Form>\r\n        <br/><br/>\r\n        <Button floated='right' content='Back To Movies >' \r\n            secondary onClick={() => {this.props.backToMoviesCallback()}} />\r\n        </div>\r\n    \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(MovieAddEditComponent);","import React, { Component } from 'react';\r\nimport { ButtonGroup, Container, Table, Alert,Spinner } from 'reactstrap';\r\nimport NavigationBar from './NavigationBar';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { allMoviesData } from '../Model/imdb.js';\r\nimport { Button, Card, Grid, Image, Icon, Header,Input, Item } from 'semantic-ui-react';\r\nimport MovieAddEditComponent from './MovieAddEditComponent';\r\nimport MovieDataService from '../Services/MovieService';\r\n\r\nclass MovieComponent extends Component {\r\n\r\n  movieService;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      allMovies: [],\r\n      isLoading: true,\r\n      showAddMoviePage: false,\r\n      showUpdateMoviePage: false,\r\n      showAllMoviesPage: true,\r\n      gridSize: 4,\r\n      selectedMovie: undefined,\r\n      topGenres: [],\r\n      genreColorList: ['red','orange','yellow','olive','cyan','teal','blue','violet','purple'\r\n      ,'pink','brown','grey','black'],\r\n      isMobileScreen: false,\r\n      searchCriteria:undefined,\r\n      searchValue:undefined,\r\n    }\r\n    this.movieService = new MovieDataService();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    // retrieve user acount from session \r\n    let userInfoDetails = JSON.parse(window.sessionStorage.getItem('userAccount'));\r\n    console.log(\"user infor from session --\", userInfoDetails);\r\n    this.setState({\r\n      userInfo: userInfoDetails,\r\n    });\r\n\r\n\r\n    // resize event to check size of screen\r\n    window.addEventListener(\"resize\", this.resize.bind(this));\r\n    this.resize();\r\n\r\n    // reteieve all movies data from backedn\r\n    this.retrieveAllMoviesData();\r\n\r\n    if(this.state.allMovies && this.state.allMovies.length === 0) {\r\n      setTimeout(() => {\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n      }, 2000);\r\n    } else {\r\n      this.setState({\r\n        isLoading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  retrieveAllMoviesData = () => {\r\n\r\n    this.movieService.retrieveAllMovies().then(\r\n          response => {\r\n              \r\n              console.log('getAllMoviesData api length -', response.data.length);\r\n              const allMoviesResponse = [] = response.data;\r\n              \r\n              this.setState({\r\n                allMovies: this.sortAsPerImdbrating(allMoviesResponse),\r\n                topGenres: this.fetchAvailableGenres(allMoviesResponse),\r\n              });\r\n          }\r\n      )\r\n    \r\n  }\r\n\r\n  fetchAvailableGenres = (allMoviesResponse) => {\r\n    let topGenres = [];\r\n    allMoviesResponse.map((movie) => {\r\n      movie.genre.map((genre) => {\r\n        topGenres.push(genre.name);\r\n      });\r\n    });\r\n\r\n    topGenres = topGenres.filter((genre,index,self) => {\r\n      return self.indexOf(genre) === index;\r\n    });\r\n    \r\n    console.log('Top Genres',topGenres.length);\r\n    return topGenres;\r\n  }\r\n  sortAsPerImdbrating = (allMoviesData) => {\r\n    return allMoviesData.sort((a, b) => {return a.popularity > b.popularity ? -1 : 1});\r\n  }\r\n\r\n\r\n  resize() {\r\n      this.setState({\r\n        isMobileScreen: window.innerWidth <= 760 ? true : false,\r\n      });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n      window.removeEventListener(\"resize\", this.resize.bind(this));\r\n  }\r\n\r\n  showAddMoviePage = () => {\r\n    this.setState({\r\n      showAddMoviePage: true,\r\n      showUpdateMoviePage: false,\r\n      showAllMoviesPage: false,\r\n    });\r\n  }\r\n\r\n  editMovie(movie) {\r\n    console.log('movie to edit', movie);\r\n    this.setState({\r\n      movieToEdit: movie,\r\n      showUpdateMoviePage: true,\r\n      showAddMoviePage: false,\r\n      showAllMoviesPage:false,\r\n    });\r\n  }\r\n  deleteMovie(movie) {\r\n    // clearing other common errors if any before submit again\r\n    this.setState({\r\n      apiError: false,\r\n    });\r\n    console.log('movie to delete', movie);\r\n\r\n    this.movieService.deleteMovie(movie.name, movie.movie_id).then(\r\n      response => {\r\n          console.log('delete movie api successful for id  -' + movie.movie_id, response);\r\n          this.setState({\r\n            deletedMovie: movie,\r\n            isSuccessfulResponse: true, \r\n            successResponseMessage: response.data,\r\n            isDeleteSuccess: true,\r\n          }, () => {\r\n            // After Deletion, call the retrieve api again to fetch Movies list from DB\r\n            this.retrieveAllMoviesData();\r\n            window.scrollTo(0, 0);\r\n          });\r\n      }\r\n    ).catch((err) => {\r\n      this.setState({ \r\n        apiError: true,\r\n        apiErrorMessage: 'Sorry , error in backend api . Please try again',\r\n      });\r\n      return Promise.reject(err);\r\n    });\r\n  }\r\n  showGenreSearchButtons = () => {\r\n\r\n    if(!this.state.isMobileScreen) {\r\n      return this.state.genreColorList.map((color,i) => {\r\n        return (\r\n          <Button color={color} onClick={(e) => {\r\n                                                  this.setState({\r\n                                                    searchValue: e.target.innerText,\r\n                                                    searchCriteria: 'genre',\r\n                                                  });\r\n                                                  console.log('selected genre -',e.target.innerText);\r\n                                                }\r\n                                        }\r\n          >\r\n            {this.state.topGenres[i]}\r\n          </Button>\r\n        )\r\n      });\r\n    }\r\n    \r\n  }\r\n\r\n  getCommaSeperatedGenreList = (genreArr) => {\r\n  \r\n    return genreArr.map((item,i) => {\r\n      return (i === genreArr.length - 1) ? item.name : item.name + ',' ;\r\n    \r\n    });\r\n  }\r\n\r\n  searchByGenre(movie) {\r\n    let isGenrePresent = false;\r\n    if(this.state.searchValue && this.state.searchCriteria && this.state.searchCriteria === 'genre'){\r\n      for(let i=0;i<movie.genre.length;i++) {\r\n        if(movie.genre[i].name.toLowerCase().indexOf(this.state.searchValue.toLowerCase()) > -1) {\r\n          isGenrePresent = true;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return isGenrePresent;\r\n  }\r\n  showMoviesGrid() {\r\n\r\n      const movieList = this.state.allMovies.filter((movie) => { \r\n          if((this.state.searchValue && this.state.searchCriteria && this.state.searchValue.length >= 2\r\n              && this.state.searchCriteria === 'byMuvieAndDirectorName'\r\n              && (movie.name.toLowerCase().indexOf(this.state.searchValue.toLowerCase()) > -1 || \r\n              movie.director.toLowerCase().indexOf(this.state.searchValue.toLowerCase()) > -1))\r\n            || this.searchByGenre(movie)\r\n            || this.state.searchValue === undefined\r\n            || this.state.searchValue === '') {\r\n\r\n              return movie;\r\n          }\r\n      }).map((fmovie) => {\r\n\r\n            return(\r\n              <tr key={fmovie.name}>\r\n                  <td style={{whiteSpace: 'nowrap'}}>{fmovie.name}</td>\r\n                  <td>{fmovie.director}</td>\r\n                  <td>{this.getCommaSeperatedGenreList(fmovie.genre)}</td>\r\n                  <td>{fmovie.popularity}{'%'}</td>\r\n\r\n                  {/* // allow to edit/delete only if admin */}\r\n                  {this.state.userInfo && this.state.userInfo.admin &&\r\n                    <td>\r\n                      <ButtonGroup>\r\n                        <Button size=\"sm\" color=\"grey\" onClick={(e) => this.editMovie(fmovie)}> Edit</Button>\r\n                        <Button size=\"sm\" color=\"red\" onClick={(e) => this.deleteMovie(fmovie)}> Delete</Button>\r\n                      </ButtonGroup>\r\n                    </td>\r\n                  }\r\n                </tr>\r\n              )\r\n      });\r\n      return movieList;\r\n  }\r\n\r\n  searchMoviesByNameAndDirector(event) {\r\n    console.log('Search item -',event.target.value);\r\n    this.setState({\r\n      searchValue: event.target.value,\r\n      searchCriteria: 'byMuvieAndDirectorName',\r\n    });\r\n  }\r\n\r\n  handleAddEditCallback = (responseData) => {\r\n    console.log('call back from add/edit api with response data', responseData);\r\n    this.setState({\r\n      showAddMoviePage:false,\r\n      showUpdateMoviePage:false,\r\n      showAllMoviesPage: responseData.isEditResponse || responseData.isAddResponse || true,\r\n      isSuccessfulResponse: responseData.isSuccess || false,\r\n      successResponseMessage: responseData.isEditResponse \r\n                    ? 'Movie Edited Successfully with name :' + responseData.addEditResponseData.name\r\n                    : !responseData.isEditResponse  && responseData.addEditResponseData\r\n                      ? 'Movie Added Successfully with name :' + responseData.addedMovieName\r\n                      : 'Movie Eited/Added Successfully'\r\n    });\r\n    // Finally call the retrieve api again to fetch the Updated/Added Movies list from DB \r\n    this.retrieveAllMoviesData();\r\n  }\r\n\r\n  backToMoviesPage = () => {\r\n    this.setState({\r\n      showAddMoviePage:false,\r\n      showUpdateMoviePage:false,\r\n      showAllMoviesPage: true,\r\n    });\r\n  }\r\n  render() {\r\n    \r\n    if (this.state.isLoading) {\r\n      return <div \r\n              style={{align:\"center\"}}>\r\n                <Spinner style={{ width: '3rem', height: '3rem' }} />{' '}\r\n                <Spinner style={{ width: '3rem', height: '3rem' }} type=\"grow\" />\r\n             </div>;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <NavigationBar/>\r\n       \r\n        {this.state.showAllMoviesPage && this.state.allMovies &&\r\n\r\n        <Container fluid>\r\n            {this.state.isSuccessfulResponse && this.state.successResponseMessage &&\r\n              <Alert color=\"success\">\r\n                {this.state.successResponseMessage}\r\n              </Alert>\r\n            }\r\n            {this.state.isFailureResponse && this.state.failureResponseMessage &&\r\n              <Alert color=\"danger\">\r\n                {this.state.failureResponseMessage}\r\n              </Alert>\r\n            }\r\n            {/* common api error */}\r\n            {this.state.apiError && this.state.apiErrorMessage &&\r\n                  <Alert color=\"danger\">\r\n                    {this.state.apiErrorMessage}\r\n                  </Alert>\r\n            }\r\n\r\n            {/* allow user to add movies= only is its a admin */}\r\n            {this.state.userInfo && this.state.userInfo.admin &&\r\n                <div className=\"float-right\">\r\n                  <Button color='green' onClick={(e) => this.showAddMoviePage()}> \r\n                  {/* to=\"/muvies/new\" */}\r\n                    Add New Movie \r\n                    \r\n                  </Button>\r\n                \r\n                </div>\r\n            }\r\n            \r\n          \r\n            <Header size='large'>\r\n              All Movies\r\n              \r\n            </Header>\r\n            \r\n            {this.state.allMovies && this.state.allMovies.length === 0 &&\r\n                  <Header size='small'>Data not available , please login as ADMIN to add new Movie</Header>                  \r\n            }\r\n            {this.state.allMovies && this.state.allMovies.length > 0 &&\r\n                <Header size='small'>Choose your favourite genre</Header>\r\n            }\r\n            \r\n            \r\n            {this.state.topGenres && this.state.topGenres.length > 0 && \r\n              <div> {this.showGenreSearchButtons()}</div>\r\n            }\r\n            \r\n            <Table className=\"mt-4\">\r\n              <thead>\r\n              <tr>\r\n                <th width=\"20%\">Name</th>\r\n                <th width=\"20%\">Director</th>\r\n                <th width=\"20%\">Genre</th>\r\n                <th width=\"20%\">Popularity <Icon color='red' name='heart' /></th>\r\n               \r\n                <th width=\"20%\">\r\n                    <Input\r\n                      icon={<Icon name='search' inverted circular link />}\r\n                      placeholder='Search...'\r\n                      onChange={(e) => {this.searchMoviesByNameAndDirector(e)}}\r\n                    />\r\n                </th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              {this.showMoviesGrid()}\r\n              </tbody>\r\n            </Table>\r\n        </Container>\r\n        }\r\n\r\n        {/* Add page */}\r\n        {this.state.showAddMoviePage &&\r\n          <Container fluid>\r\n              <MovieAddEditComponent \r\n                page='add' isEditPage={false} \r\n                responseCallback={this.handleAddEditCallback}\r\n                backToMoviesCallback={this.backToMoviesPage}\r\n              >\r\n              </MovieAddEditComponent>     \r\n          </Container>\r\n        }\r\n\r\n        {/* Edit Page */}\r\n        {this.state.showUpdateMoviePage &&\r\n          <Container fluid>\r\n            <MovieAddEditComponent \r\n              page='edit' isEditPage={true} \r\n              movieToEdit={this.state.movieToEdit}\r\n              responseCallback={this.handleAddEditCallback}\r\n              backToMoviesCallback={this.backToMoviesPage}\r\n            >\r\n            </MovieAddEditComponent>   \r\n          </Container>\r\n        }\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(MovieComponent);","import React, {Component} from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport SignUpIn from './Components/SignUpIn';\r\nimport MovieComponent from './Components/MovieComponent';\r\n\r\n\r\nclass App extends Component {\r\n\r\n \r\n  constructor(props) {\r\n        super(props);\r\n  }\r\n  render() { \r\n    \r\n    return (\r\n      <div className=\"App\">\r\n        \r\n          <Router>\r\n            <Switch>\r\n              <Route path='/' exact={true} \r\n                  render={(props) => (\r\n                    <SignUpIn {...props} isAuthed={true} />\r\n                  )}\r\n              />\r\n              <Route path='/signUp' exact={true} \r\n                  render={(props) => (\r\n                    <SignUpIn {...props} isAuthed={true} />\r\n                  )}\r\n              />\r\n              <Route path='/movies' exact={true} \r\n                  render={(props) => (\r\n                    <MovieComponent {...props} isAuthed={true} />\r\n                  )}\r\n                  // component={MovieComponent}\r\n              />\r\n            </Switch>\r\n          </Router>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}